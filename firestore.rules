
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has a specific role
    function isSignedIn() {
      return request.auth != null;
    }
    
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isAdminOrPartner(userId) {
      let userRole = getUserRole(userId);
      return userRole == 'admin' || userRole == 'partner';
    }

    // Users Collection
    match /users/{userId} {
      // Allow users to create their own profile
      allow create: if isSignedIn() && request.auth.uid == userId;
      // Allow users to read and update their own profile
      allow read, update: if isSignedIn() && request.auth.uid == userId;
      // Allow admins and partners to read and update any user profile
      allow read, update: if isSignedIn() && isAdminOrPartner(request.auth.uid);
    }

    // Events Collection
    match /events/{eventId} {
      // Admins and Partners can do anything
      allow read, write: if isSignedIn() && isAdminOrPartner(request.auth.uid);

      // DJs can read events assigned to them
      allow read: if isSignedIn() && getUserRole(request.auth.uid) == 'dj' && resource.data.dj_id == request.auth.uid;
      
      // DJs can create events (e.g., if they add an event for themselves) - might need refinement
      // allow create: if isSignedIn() && getUserRole(request.auth.uid) == 'dj' && request.resource.data.dj_id == request.auth.uid;
      
      // DJs can update events assigned to them (e.g., add payment proofs)
      // Careful: This allows DJ to update any field. Consider more granular field-level security if needed.
      // For now, focusing on payment_proofs and dj_costs.
      allow update: if isSignedIn() && 
                       getUserRole(request.auth.uid) == 'dj' && 
                       resource.data.dj_id == request.auth.uid &&
                       (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['payment_proofs', 'dj_costs', 'updated_at']));
    }

    // Agency Accounts Collection
    match /agency_accounts/{accountId} {
      // Admins and Partners can manage agency accounts
      allow read, write: if isSignedIn() && isAdminOrPartner(request.auth.uid);
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
